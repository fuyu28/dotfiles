{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Print to console": {
		"prefix": "cpp",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"#define all(x) begin(x), end(x)",
			"#define sz(x) (lint)(x).size()",
			"#define rep(i, x, y) for (lint i = (lint)x; i < (lint)y; i++)",
			"#define REP(i, x, y) for (lint i = (lint)x; i <= (lint)y; i++)",
			"using lint = long long;",
			"using ulint = unsigned long long;",
			"using pll = pair<lint, lint>;",
			"using Graph = vector<vector<lint>>;",
			"const int dy[4] = {-1, 1, 0, 0};",
			"const int dx[4] = {0, 0, -1, 1};",
			"const string var = \"^v<>\";",
			"const string rev_var = \"v^><\";",
			"void printYES (bool x) { cout << (x ? \"YES\" : \"NO\") << \"\\n\";};",
			"void printYes(bool x) { cout << (x ? \"Yes\" : \"No\") << \"\\n\";};",
			"void printyes(bool x) { cout << (x ? \"yes\" : \"no\") << \"\\n\";};",
			"struct Init { Init() { ios::sync_with_stdio(0); cin.tie(0); } }init;",
			"",
			"int main() {",
			"",
			"}",
		],
		"description": "C++ Template"
	}
}